<?php

//將/node這個頁面讓他變成not-found
function hellosanta_menu_alter(&$items) {
    $items['node']['page callback'] = 'drupal_not_found';
}



function hellosanta_form_alter(&$form, &$form_state, $form_id){	
  if($form_id=="user_login_block"){
    $form['#form_placeholder'] = TRUE;
  }
  elseif($form_id=="user_register_form"){
    $form['#form_placeholder'] = TRUE;
  }
  elseif(strpos($form_id, 'commerce_cart_add_to_cart_form') !== FALSE){
    $form['quantity']['#title'] = t('數量');
    $form['submit']['#value']=t('馬上租賃');
  }
  elseif($form_id=="product_display_node_form"){
    if(!empty($form['field_product_reference']['und']['entities'][0])){
      //dpm($form);
      $form['field_product_reference']['und']['entities'][0]['form']['commerce_price']['und'][0]['amount']['#title']=t('平日租金');
      $form['field_product_reference']['und']['entities'][0]['form']['commerce_price']['und'][0]['amount']['#description']=t('請填寫第二日起，平日租金');
    }
    
  }
  
}	

function computed_field_field_weekend_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items){
  $start_date=$entity->field_rent_period['und'][0]['value'];
  $dStart = new DateTime($start_date);
  //若第一天為假日，則不予計算
  $weekendDays = array(6,7); # date format = N (1 = Monday, ...)
  $end_date=$entity->field_rent_period['und'][0]['value2'];
  if(!in_array($dStart->format('N'), $weekendDays)){
    $entity_field[0]['value']= number_of_working_days($start_date,$end_date);  
  }
  else{
    $entity_field[0]['value']= number_of_working_days($start_date,$end_date)-1;   
  }
  
}

function computed_field_field_weekend_count_display($field, $entity_field_item, $entity_lang, $langcode, $entity){
  $display = $entity_field_item['value'];
  return $display;

}

function computed_field_field_rent_duration_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items){
  $start_date=$entity->field_rent_period['und'][0]['value'];
  $end_date=$entity->field_rent_period['und'][0]['value2'];
  $dStart = new DateTime($start_date);
  $dEnd  = new DateTime($end_date);
  $dDiff = $dStart->diff($dEnd);
  $days=$dDiff->days;
  $entity_field[0]['value']=$days+1;
}

function computed_field_field_working_count_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items){
  $start_date=$entity->field_rent_period['und'][0]['value'];
  $end_date=$entity->field_rent_period['und'][0]['value2'];
  $dStart = new DateTime($start_date);
  $dEnd  = new DateTime($end_date);
  $dDiff = $dStart->diff($dEnd);
  $days= 1 + $dDiff->days;
  $weekendDays = array(6,7); # date format = N (1 = Monday, ...)
  if(!in_array($dStart->format('N'), $weekendDays)){ //非假日
    $entity_field[0]['value']=$days-number_of_working_days($start_date,$end_date)-1;
  }
  else{//假日
    $entity_field[0]['value']=$days-number_of_working_days($start_date,$end_date);
  }
  

}

function computed_field_field_total_price_compute(&$entity_field, $entity_type, $entity, $field, $instance, $langcode, $items){
  $start_date=$entity->field_rent_period['und'][0]['value'];
  $end_date=$entity->field_rent_period['und'][0]['value2'];
  $dStart = new DateTime($start_date);
  $dEnd  = new DateTime($end_date);
  $dDiff = $dStart->diff($dEnd);
  $days= 1 + $dDiff->days;
  $weekendDays = array(6,7); # date format = N (1 = Monday, ...)

  $product_id=$entity->commerce_product['und'][0]['product_id'];
  $product=commerce_product_load($product_id);
  
  $initial_price=$product->field_initial_price['und'][0]['amount']/10;
  $weekend_price=$product->field_weekend_price['und'][0]['amount']/10;
  $normal_price=$product->commerce_price['und'][0]['amount']/10;

  if(!in_array($dStart->format('N'), $weekendDays)){ //非假日
    $working_days=$days-number_of_working_days($start_date,$end_date)-1;
    $holidays=number_of_working_days($start_date,$end_date);
  }
  else{//假日
    $working_days=$days-number_of_working_days($start_date,$end_date);
    $holidays=number_of_working_days($start_date,$end_date)-1;
  }

  $entity_field[0]['value']=($initial_price + $weekend_price*$holidays + $normal_price*$working_days)*10;
}

function number_of_working_days($from, $to) {
    $weekendDays = array(6,7); # date format = N (1 = Monday, ...)

    $from = new DateTime($from);
    $to = new DateTime($to);
    $to->modify('+1 day');
    $interval = new DateInterval('P1D');
    $periods = new DatePeriod($from, $interval, $to);

    $days = 0;
    foreach ($periods as $period) {
        if (!in_array($period->format('N'), $weekendDays)) continue;
        $days++;
    }
    return $days;
}

?>
